# -*- coding: utf-8 -*-
"""ЛискаВМ_ЛБ_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QQWEFU5IY4g_Cz3ZCSDEtISAdZoh0w8U

Лиска Вадим Максимович ФІТ 4-5 Л_Б_1 Варіант 11
"""

start_value = 3
common_difference = 5
vector_length = 10

arithmetic_sequence = [start_value + i * common_difference for i in range(vector_length)]

print(arithmetic_sequence)

matrix = [[0] * 3 for _ in range(3)]

for i in range(3):
    for j in range(3):
        if j == 0:
            matrix[i][j] = 1
        else:
            matrix[i][j] = matrix[i][j-1] * (i*3 + j)

for row in matrix:
    print(row)

import random

matrix = [[random.randint(1, 2) for _ in range(3)] for _ in range(3)]

print("Матриця:")
for row in matrix:
    print(row)

total_sum = sum(sum(row) for row in matrix)
element_count = len(matrix) * len(matrix[0])
average = total_sum / element_count

print("Середнє арифметичне елементів матриці: {:.2f}".format(average))

import random

matrix = [[random.uniform(0, 1) for _ in range(4)] for _ in range(4)]

print("Матриця:")
for row in matrix:
    print(row)

count_gt_05 = sum(1 for row in matrix for element in row if element > 0.5)

print("Кількість елементів, більших 0.5: {}".format(count_gt_05))

import random

array1 = [random.randint(-15, 15) for _ in range(7)]
array2 = [random.randint(-15, 15) for _ in range(7)]

print("Масив 1:", array1)
print("Масив 2:", array2)

sum_result = [x + y for x, y in zip(array1, array2)]
subtract_result = [x - y for x, y in zip(array1, array2)]
multiply_result = [x * y for x, y in zip(array1, array2)]

print("Сума елементів:", sum_result)
print("Різниця елементів:", subtract_result)
print("Добуток елементів:", multiply_result)

import random

vector1 = [random.randint(-10, 10) for _ in range(7)]
vector2 = [random.randint(-10, 10) for _ in range(7)]

print("Вектор 1:", vector1)
print("Вектор 2:", vector2)

dot_product = sum(x * y for x, y in zip(vector1, vector2))

print("Скалярний добуток векторів:", dot_product)

import random

matrix1 = [[random.randint(1, 12) for _ in range(2)] for _ in range(4)]
matrix2 = [[random.randint(1, 12) for _ in range(5)] for _ in range(2)]

print("Матриця 1:")
for row in matrix1:
    print(row)

print("Матриця 2:")
for row in matrix2:
    print(row)

result_matrix = [[sum(a * b for a, b in zip(row1, col2)) for col2 in zip(*matrix2)] for row1 in matrix1]

print("Результат перемноження матриць:")
for row in result_matrix:
    print(row)

import numpy as np
from numpy.linalg import inv

matrix = np.random.randint(1, 12, (2, 2))

print("Початкова матриця:")
print(matrix)

try:
    inverse_matrix = inv(matrix)
    print("\nОбернена матриця:")
    print(inverse_matrix)
except np.linalg.LinAlgError:
    print("\nМатриця не має оберненої, оскільки вона є сингулярною.")

import numpy as np

matrix = np.random.rand(3, 3)
print("Початкова матриця:")
print(matrix)

transposed_matrix = np.transpose(matrix)
print("\nТранспонована матриця:")
print(transposed_matrix)

import numpy as np

matrix = np.random.rand(3, 4)
vector = np.random.rand(4)

result = np.dot(matrix, vector)
print(result)

import numpy as np

matrix = np.random.rand(2, 3)
vector = np.random.randint(1, 11, 3)

result = np.dot(matrix, vector)
print(result)

import numpy as np

matrix1 = np.random.randint(1, 11, (4, 4))
matrix2 = np.random.randint(1, 11, (4, 4))

result = matrix1 - matrix2
print(result)

import numpy as np

matrix1 = np.random.uniform(-1, 1, (3, 3))
matrix2 = np.random.uniform(-1, 1, (3, 3))

result = matrix1 + matrix2
print(np.sum(result))

import numpy as np

matrix = np.random.uniform(-10, 10, (9, 9))
count_even = np.sum(matrix % 2 == 0)

print("Матриця:")
print(matrix)
print("\nКількість парних елементів матриці:", count_even)

import numpy as np

matrix = np.random.uniform(-0.5, 0.5, (5, 5))
geometric_mean_vector = np.prod(matrix, axis=1) ** (1/5)
print("Матриця:")
print(matrix)
print("\nВектор середнього геометричного значення для кожного рядка:")
print(geometric_mean_vector.reshape(-1, 1))